#!/bin/sh
cachepath=~/.cache/wal
configpath=~/.config/bashwal/colorschemes
source $cachepath/colors.sh
dmenucmd="dmenu -sb $color0 -sf $color6 -nf $color0 -nb $color6 -l 20 -z 200 -i"

selecttheme() {
themesel=$( ls $HOME/.config/bashwal/colorschemes/ | $dmenucmd )
cp ~/.config/bashwal/colorschemes/$themesel $cachepath/colors.sh
source $configpath/$themesel
}

reloadbar() {
	kill -34 $(cat ~/.cache/pidofbar)
}

case $1 in 
	-t) selecttheme ; reloadbar ;;
esac

setwallpaper() {
#[ "$wallpaper" = "None" ] && wallpaper=$color6
#xsetroot -solid "$wallpaper"
~/./.fehbg
}

colorsXresources() {
	echo "
! X colors.
! Generated by 'wal'
*foreground:        $foreground
*background:        $background
*.foreground:       $foreground
*.background:       $background
emacs*foreground:   $foreground
emacs*background:   $background
URxvt*foreground:   $foreground
XTerm*foreground:   $foreground
UXTerm*foreground:  $foreground
URxvt*background:   [100]$background
XTerm*background:   $background
UXTerm*background:  $background
URxvt*cursorColor:  $cursor
XTerm*cursorColor:  $cursor
UXTerm*cursorColor: $cursor
URxvt*borderColor:  [100]$background

! Colors 0-31.
*.color0: $color0
*color0:  $color0
*.color1: $color1
*color1:  $color1
*.color2: $color2
*color2:  $color2
*.color3: $color3
*color3:  $color3
*.color4: $color4
*color4:  $color4
*.color5: $color5
*color5:  $color5
*.color6: $color6
*color6:  $color6
*.color7: $color7
*color7:  $color7
*.color8: $color8
*color8:  $color8
*.color9: $color9
*color9:  $color9
*.color10: $color10
*color10:  $color10
*.color11: $color11
*color11:  $color11
*.color12: $color12
*color12:  $color12
*.color13: $color13
*color13:  $color13
*.color14: $color14
*color14:  $color14
*.color15: $color15
*color15:  $color15

! Black color that will not be affected by bold highlighting.
*.color66: $color0
*color66:  $color0

! Xclock colors.
XClock*foreground: $foreground
XClock*background: $background
XClock*majorColor:  rgba:ff/ff/ff/ff
XClock*minorColor:  rgba:ff/ff/ff/ff
XClock*hourColor:   rgba:ff/ff/ff/ff
XClock*minuteColor: rgba:ff/ff/ff/ff
XClock*secondColor: rgba:ff/ff/ff/ff

! Set depth to make transparency work.
URxvt*depth: 32
" > $cachepath/colors.Xresources
xrdb -merge -I$HOME $cachepath/colors.Xresources
[[ -f ~/.Xresources ]] && xrdb -merge -I$HOME ~/.Xresources
}

colorsjson() {
echo '
{
    "wallpaper": "None",
    "alpha": "100",

    "special": {
        "background": "'$background'",
        "foreground": "'$foreground'",
        "cursor": "'$cursor'"
    },
    "colors": {
        "color0": "'$color0'",
        "color1": "'$color1'",
        "color2": "'$color2'",
        "color3": "'$color3'",
        "color4": "'$color4'",
        "color5": "'$color5'",
        "color6": "'$color6'",
        "color7": "'$color7'",
        "color8": "'$color8'",
        "color9": "'$color9'",
        "color10": "'$color10'",
        "color11": "'$color11'",
        "color12": "'$color12'",
        "color13": "'$color13'",
        "color14": "'$color14'",
        "color15": "'$color15'"
    }
}'  > $cachepath/colors.json
}

colorstty() {
sequences="\033]10;$color7\007\033]11;$background\007\033]12;$color7\007\033]13;$color7\007\033]14;$color0\007\033]708;$color0\007\033]4;0;$color0\007\033]4;1;$color1\007\033]4;2;$color2\007\033]4;3;$color3\007\033]4;4;$color4\007\033]4;5;$color5\007\033]4;6;$color6\007\033]4;7;$color7\007\033]4;8;$color8\007\033]4;9;$color9\007\033]4;10;$color10\007\033]4;11;$color11\007\033]4;12;$color12\007\033]4;13;$color13\007\033]4;14;$color14\007\033]4;15;$color15\007\033]4;66;$color0\007"
    for term in /dev/pts/[0-9]*; do
        [[ -w "$term" ]] && printf "%b" "$sequences" > "$term" &
    done
}

#colorssh
setwallpaper
colorstty
colorsXresources
colorsjson
dwmc xrdb 
[ "$1" = "-t" ] && kill -34 $(cat ~/.cache/pidofbar)
